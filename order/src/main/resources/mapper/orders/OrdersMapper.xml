<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.orders.mapper.OrdersMapper">
    
    <resultMap type="Orders" id="OrdersResult">
        <result property="orderId"    column="order_id"    />
        <result property="userId"    column="user_id"    />
        <result property="status"    column="status"    />
        <result property="bus"    column="bus"    />
        <result property="date"    column="date"    />
        <result property="createTime"    column="create_time"    />
        <result property="verifyTime"    column="verify_time"    />
        <result property="price"    column="price" />
        <result property="type"    column="type"    />
    </resultMap>

    <resultMap id="UserOrdersResult" type="UserOrdersDTO">
        <result property="orderID"    column="order_id"    />
        <result property="busID"    column="bus"    />
        <result property="date"    column="date"    />
        <result property="startTime"    column="start_time"    />
        <result property="destTime"    column="end_time"    />
        <result property="start"    column="start"    />
        <result property="dest"    column="dest"    />
        <result property="price"    column="price"    />
        <result property="ticketStatus"    column="status"    />
    </resultMap>

    <sql id="selectOrdersVo">
        select order_id, user_id, status, bus, date, create_time, verify_time, price, type from orders
    </sql>

    <sql id="selectNormalOrdersVo">
        SELECT
            O.order_id, O.bus, O.`date`, B.start_time, B.end_time,
            S.station_name as `start`, D.station_name as `dest`,
            O.price as price, O.`status` as `status`
        FROM orders O
        JOIN bus B ON O.bus = B.bus_id
        JOIN station S ON B.`start` = S.station_id
        JOIN station D ON B.`dest` = D.station_id
    </sql>

    <select id="selectNormalOrdersList" parameterType="OrdersInfo" resultMap="UserOrdersResult">
        <include refid="selectNormalOrdersVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="orderID != null "> and order_id = #{orderID}</if>
            <if test="date != null "> and date = #{date}</if>
            <if test="start != null "> and start = #{start}</if>
            <if test="dest != null "> and dest = #{dest}</if>
        </where>
        ORDER BY `date` DESC, `start_time` DESC
    </select>

    <sql id="selectEmployeeOrdersVo">
        SELECT
            O.order_id, O.bus, O.`date`, B.start_time, B.end_time,
            S.station_name as `start`, D.station_name as `dest`,
            O.price as price, O.`status` as `status`
        FROM orders O
        JOIN bus B ON O.bus = B.bus_id
        JOIN station S ON B.`start` = S.station_id
        JOIN station D ON B.`dest` = D.station_id
    </sql>

    <select id="selectEmployeeOrdersList" parameterType="OrdersInfo" resultMap="UserOrdersResult">
        <include refid="selectEmployeeOrdersVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="orderID != null "> and order_id = #{orderID}</if>
            <if test="date != null "> and date = #{date}</if>
            <if test="start != null "> and start = #{start}</if>
            <if test="dest != null "> and dest = #{dest}</if>
        </where>
        ORDER BY `date` DESC, `start_time` DESC
    </select>

    <select id="selectOrdersList" parameterType="Orders" resultMap="OrdersResult">
        <include refid="selectOrdersVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="bus != null  and bus != ''"> and bus = #{bus}</if>
            <if test="date != null "> and date = #{date}</if>
            <if test="verifyTime != null "> and verify_time = #{verifyTime}</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="type != null "> and type = #{type}</if>
        </where>
    </select>
    
    <select id="selectOrdersById" parameterType="String" resultMap="OrdersResult">
        <include refid="selectOrdersVo"/>
        where order_id = #{orderId}
    </select>

    <select id="selectStatusById" parameterType="String" resultType="String">
        select `status` from orders where order_id = #{orderID,jdbcType=VARCHAR}
    </select>

    <insert id="insertOrders" parameterType="Orders">
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">order_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="bus != null and bus != ''">bus,</if>
            <if test="date != null">date,</if>
            <if test="createTime != null">create_time,</if>
            <if test="verifyTime != null">verify_time,</if>
            <if test="price != null">price,</if>
            <if test="type != null">type,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">#{orderId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="bus != null and bus != ''">#{bus},</if>
            <if test="date != null">#{date},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="verifyTime != null">#{verifyTime},</if>
            <if test="price != null">#{price},</if>
            <if test="type != null">#{type},</if>
         </trim>
    </insert>

    <update id="updateOrders" parameterType="Orders">
        update orders
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="bus != null and bus != ''">bus = #{bus},</if>
            <if test="date != null">date = #{date},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="verifyTime != null">verify_time = #{verifyTime},</if>
            <if test="price != null">price = #{price},</if>
            <if test="type != null">type = #{type},</if>
        </trim>
        where order_id = #{orderId}
    </update>

    <delete id="deleteOrdersById" parameterType="String">
        delete from orders where order_id = #{orderId}
    </delete>

    <delete id="deleteOrdersByIds" parameterType="String">
        delete from orders where order_id in 
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>

    <update id="closeOrdersBeforeToday">
        UPDATE orders
        SET `status` = '3'
        WHERE `date` &lt; CURDATE() AND `status` = '1'
    </update>
    
    <select id="checkOrderIsPaid" parameterType="String" resultType="Integer">
        SELECT COUNT(*)
        FROM orders
        WHERE order_id = #{orderId, jdbcType=VARCHAR}
            AND `status` = '0'
    </select>

    <update id="closeOrder" parameterType="String">
        UPDATE orders O
        INNER JOIN tickets T
        ON O.bus = T.bus_id AND O.`date` = T.bus_date
        SET O.`status` = 3, T.normal_tickets_remain = T.normal_tickets_remain + 1
        WHERE O.order_id = #{orderId, jdbcType=VARCHAR}
    </update>

    <update id="closeEmployeeOrder" parameterType="String">
        UPDATE orders O
        INNER JOIN tickets T
        ON O.bus = T.bus_id AND O.`date` = T.bus_date
        SET O.`status` = 3, T.employee_tickets_remain = T.employee_tickets_remain + 1
        WHERE O.order_id = #{orderId, jdbcType=VARCHAR}
    </update>
</mapper>